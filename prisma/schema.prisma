// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id @default(ulid())
  name         String
  email        String        @unique
  password     String
  bankAccounts BankAccount[]
  transactions Transaction[]
  categories   Category[]
}

model BankAccount {
  id           String          @id @default(ulid())
  name         String
  balance      Float
  color        String
  type         BankAccountType
  transactions Transaction[]
  User         User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model Transaction {
  id            String          @id @default(ulid())
  name          String
  value         Float
  type          TransactionType
  User          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  BankAccount   BankAccount     @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)
  bankAccountId String
  Category      Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String
}

model Category {
  id           String          @id @default(ulid())
  name         String
  icon         String
  type         TransactionType
  transactions Transaction[]
  User         User?           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String?
}

enum BankAccountType {
  CHECKING
  INVESTMENT
  CASH
}

enum TransactionType {
  INCOME
  EXPENSE
}
